plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'maven-publish'
    id 'signing'
}
apply plugin: "kotlin-kapt"

ext {
    PUBLISH_GROUP_ID = 'com.buttercms.android'
    // {x-release-please-start-version}
    PUBLISH_VERSION = '1.0.0'
    // {x-release-please-end}
    PUBLISH_ARTIFACT_ID = 'buttercmsclient-kotlin'
    PUBLISH_DESCRIPTION = 'Android library for ButterCMS API.'
    PUBLISH_URL = 'https://github.com/ButterCMS/buttercms-kotlin'
    PUBLISH_LICENSE_NAME = 'MIT License'
    PUBLISH_LICENSE_URL = 'http://www.opensource.org/licenses/mit-license.php'
    PUBLISH_DEVELOPER_ID = 'deAnnaa'
    PUBLISH_DEVELOPER_NAME = 'Deana Bielicka'
    PUBLISH_DEVELOPER_URL = 'https://github.com/deAnnaa'
    PUBLISH_SCM_CONNECTION = 'scm:git@github.com:ButterCMS/buttercms-kotlin.git'
    PUBLISH_SCM_DEVELOPER_CONNECTION = 'scm:git@github.com:ButterCMS/buttercms-kotlin.git'
    PUBLISH_SCM_URL = 'https://github.com/ButterCMS/buttercms-kotlin'
}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName PUBLISH_VERSION

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        test.resources.srcDirs += 'src/main/res/raw'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    //Network
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    implementation "com.squareup.moshi:moshi:1.12.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.12.0"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.0"
    implementation 'com.squareup.retrofit2:converter-jackson:2.1.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.12.0'

    //Test
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.2")
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = PUBLISH_GROUP_ID
                artifactId = PUBLISH_ARTIFACT_ID
                version = PUBLISH_VERSION

                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = PUBLISH_DESCRIPTION
                    url = PUBLISH_URL
                    licenses {
                        license {
                            name = PUBLISH_LICENSE_NAME
                            url = PUBLISH_LICENSE_URL
                        }
                    }
                    developers {
                        developer {
                            id = PUBLISH_DEVELOPER_ID
                            name = PUBLISH_DEVELOPER_NAME
                            url = PUBLISH_DEVELOPER_URL
                        }
                    }
                    scm {
                        connection = PUBLISH_SCM_CONNECTION
                        developerConnection = PUBLISH_SCM_DEVELOPER_CONNECTION
                        url = PUBLISH_SCM_URL
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.release
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
